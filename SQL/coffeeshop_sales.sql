----c_coffeeshop table
--CREATE TABLE c_coffeeshops (
--    coffeeshop_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
--    coffeeshop_name VARCHAR2(255),
--    branch_locations VARCHAR2(255),
--    location_count NUMBER,
--    seating_capacity NUMBER,
--    has_dietary_options VARCHAR2(20),
--    phone VARCHAR2(20)
--);
--
--INSERT INTO c_coffeeshops (coffeeshop_name, branch_locations, location_count, seating_capacity, has_dietary_options, phone)
--SELECT 
--    coffeeshop_name, 
--    branch_locations, 
--    location_count, 
--    seating_capacity, 
--    has_dietary_options, 
--    phone
--FROM coffeeshop_sales;
--
--SELECT * FROM c_coffeeshops;
--
----c_coffeeshop_performance_sales table
--CREATE TABLE c_coffeeshop_performance_sales (
--    coffeeshop_performance_sales_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
--    coffeeshop_id NUMBER REFERENCES c_coffeeshops(coffeeshop_id) ON DELETE CASCADE,
--    
--    peak_hours VARCHAR2(255),
--    busiest_days VARCHAR2(255),
--    peak_season VARCHAR2(255),
--    best_weather_for_visits VARCHAR2(255),
--    best_selling_product VARCHAR2(255),
--    least_selling_product VARCHAR2(255),
--    avg_time_spent VARCHAR2(50),
--    dominant_age_group VARCHAR2(50),
--    new_vs_loyal_customers VARCHAR2(50),
--    visit_purpose VARCHAR2(255),
--    solo_vs_group_visits VARCHAR2(50),
--    customer_reaction_to_discounts VARCHAR2(50),
--    holiday_customer_increase VARCHAR2(50),
--    rating NUMBER(3,2) CHECK (rating BETWEEN 0 AND 5),
--    review_count NUMBER DEFAULT 0,
--    excellent_reviews NUMBER DEFAULT 0,
--    good_reviews NUMBER DEFAULT 0,
--    average_reviews NUMBER DEFAULT 0,
--    poor_reviews NUMBER DEFAULT 0,
--    terrible_reviews NUMBER DEFAULT 0,
--
--    preferred_payment_method VARCHAR2(255),
--    avg_order_price VARCHAR2(30),
--    wolt_vs_inhouse_orders VARCHAR2(255),
--    most_preferred_size VARCHAR2(50)
--);
--
--INSERT INTO c_coffeeshop_performance_sales (
--    coffeeshop_id, 
--    peak_hours, 
--    busiest_days, 
--    peak_season, 
--    best_weather_for_visits, 
--    best_selling_product, 
--    least_selling_product, 
--    avg_time_spent, 
--    dominant_age_group, 
--    new_vs_loyal_customers, 
--    visit_purpose, 
--    solo_vs_group_visits, 
--    customer_reaction_to_discounts, 
--    holiday_customer_increase, 
--    rating, 
--    review_count, 
--    excellent_reviews, 
--    good_reviews, 
--    average_reviews, 
--    poor_reviews, 
--    terrible_reviews, 
--    preferred_payment_method, 
--    avg_order_price, 
--    wolt_vs_inhouse_orders, 
--    most_preferred_size
--)
--SELECT 
--    coffeeshop_id, 
--    peak_hours, 
--    busiest_days, 
--    peak_season, 
--    best_weather_for_visits, 
--    best_selling_product, 
--    least_selling_product, 
--    avg_time_spent, 
--    dominant_age_group, 
--    new_vs_loyal_customers, 
--    visit_purpose, 
--    solo_vs_group_visits, 
--    customer_reaction_to_discounts, 
--    holiday_customer_increase, 
--    rating, 
--    review_count, 
--    excellent_reviews, 
--    good_reviews, 
--    average_reviews, 
--    poor_reviews, 
--    terrible_reviews, 
--    preferred_payment_method, 
--    avg_order_price, 
--    wolt_vs_inhouse_orders, 
--    most_preferred_size
--FROM coffeeshop_sales;
--
--
--SELECT * FROM c_coffeeshop_performance_sales;
--
--
---- c_coffeeshop_campaigns table
--CREATE TABLE c_coffeeshop_campaigns (
--    coffeeshop_campaign_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
--    coffeeshop_id NUMBER REFERENCES c_coffeeshops(coffeeshop_id) ON DELETE CASCADE,
--    recent_campaign_types VARCHAR2(255),
--    products_in_campaigns VARCHAR2(255),
--    sales_difference_after_campaigns VARCHAR2(255)
--);
--
--INSERT INTO c_coffeeshop_campaigns (coffeeshop_id, recent_campaign_types, products_in_campaigns, sales_difference_after_campaigns)
--SELECT 
--    coffeeshop_id, 
--    recent_campaign_types, 
--    products_in_campaigns, 
--    sales_difference_after_campaigns
--FROM coffeeshop_sales;
--
--SELECT * FROM c_coffeeshop_campaigns;
--
--
---- c_coffeeshop_features table
--CREATE TABLE c_coffeeshop_features (
--    coffeeshop_id NUMBER PRIMARY KEY REFERENCES c_coffeeshops(coffeeshop_id) ON DELETE CASCADE,
--    accepts_credit_cards NUMBER(1) CHECK (accepts_credit_cards IN (0,1)),
--    seating NUMBER(1) CHECK (seating IN (0,1)),
--    free_wifi NUMBER(1) CHECK (free_wifi IN (0,1)),
--    visa NUMBER(1) CHECK (visa IN (0,1)),
--    mastercard NUMBER(1) CHECK (mastercard IN (0,1)),
--    delivery NUMBER(1) CHECK (delivery IN (0,1)),
--    takeout NUMBER(1) CHECK (takeout IN (0,1)),
--    reservations NUMBER(1) CHECK (reservations IN (0,1)),
--    street_parking NUMBER(1) CHECK (street_parking IN (0,1)),
--    parking_available NUMBER(1) CHECK (parking_available IN (0,1)),
--    family_style NUMBER(1) CHECK (family_style IN (0,1)),
--    digital_payments NUMBER(1) CHECK (digital_payments IN (0,1)),
--    table_service NUMBER(1) CHECK (table_service IN (0,1)),
--    serves_alcohol NUMBER(1) CHECK (serves_alcohol IN (0,1)),
--    outdoor_seating NUMBER(1) CHECK (outdoor_seating IN (0,1)),
--    dog_friendly NUMBER(1) CHECK (dog_friendly IN (0,1)),
--    full_bar NUMBER(1) CHECK (full_bar IN (0,1)),
--    wheelchair_accessible NUMBER(1) CHECK (wheelchair_accessible IN (0,1))
--);
--
--INSERT INTO c_coffeeshop_features (
--    coffeeshop_id,
--    accepts_credit_cards,
--    seating,
--    free_wifi,
--    visa,
--    mastercard,
--    delivery,
--    takeout,
--    reservations,
--    street_parking,
--    parking_available,
--    family_style,
--    digital_payments,
--    table_service,
--    serves_alcohol,
--    outdoor_seating,
--    dog_friendly,
--    full_bar,
--    wheelchair_accessible
--)
--SELECT 
--    coffeeshop_id,
--    accepts_credit_cards,
--    seating,
--    free_wifi,
--    visa,
--    mastercard,
--    delivery,
--    takeout,
--    reservations,
--    street_parking,
--    parking_available,
--    family_style,
--    digital_payments,
--    table_service,
--    serves_alcohol,
--    outdoor_seating,
--    dog_friendly,
--    full_bar,
--    wheelchair_accessible
--FROM coffeeshop_sales;
--
--SELECT * FROM c_coffeeshop_features;
--
--
---- c_products table
--CREATE TABLE c_products (
--    product_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
--    product_name VARCHAR2(255) UNIQUE NOT NULL
--);
--
--INSERT INTO c_products (product_name) VALUES ('Americano');
--INSERT INTO c_products (product_name) VALUES ('Latte');
--INSERT INTO c_products (product_name) VALUES ('Espresso');
--INSERT INTO c_products (product_name) VALUES ('Cappuccino');
--INSERT INTO c_products (product_name) VALUES ('RafCoffee');
--INSERT INTO c_products (product_name) VALUES ('WhiteMocha');
--INSERT INTO c_products (product_name) VALUES ('BlackMocha');
--INSERT INTO c_products (product_name) VALUES ('HotChocolate');
--INSERT INTO c_products (product_name) VALUES ('Tea');
--
--SELECT * FROM c_products;
--
--
---- c_product_prices table
--CREATE TABLE c_product_prices (
--    price_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
--    coffeeshop_id NUMBER REFERENCES c_coffeeshops(coffeeshop_id) ON DELETE CASCADE,
--    product_id NUMBER REFERENCES c_products(product_id) ON DELETE CASCADE,
--    price NUMBER(5,2)
--);
--
--INSERT INTO c_product_prices (coffeeshop_id, product_id, price)
--SELECT cs.coffeeshop_id,
--       p.product_id,
--       CASE 
--           WHEN p.product_name = 'Americano' THEN cs.americano_price
--           WHEN p.product_name = 'Latte' THEN cs.latte_price
--           WHEN p.product_name = 'Espresso' THEN cs.espresso_price
--           WHEN p.product_name = 'Cappuccino' THEN cs.cappuccino_price
--           WHEN p.product_name = 'RafCoffee' THEN cs.rafcoffee_price
--           WHEN p.product_name = 'WhiteMocha' THEN cs.whitemocha_price
--           WHEN p.product_name = 'BlackMocha' THEN cs.blackmocha_price
--           WHEN p.product_name = 'HotChocolate' THEN cs.hotchocolate_price
--           WHEN p.product_name = 'Tea' THEN cs.tea_price
--       END AS price
--FROM coffeeshop_sales cs
--JOIN c_products p ON p.product_name IN ('Americano', 'Latte', 'Espresso', 'Cappuccino', 'RafCoffee', 'WhiteMocha', 'BlackMocha', 'HotChocolate', 'Tea');
--
--select * from c_product_prices;
--
--
--
--
--
--
--
--
--
--CREATE TABLE c_wolt_prices (
--    wolt_price_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
--    coffeeshop_id NUMBER REFERENCES c_coffeeshops(coffeeshop_id) ON DELETE CASCADE,
--    product_id NUMBER REFERENCES c_products(product_id) ON DELETE CASCADE,
--    price NUMBER(5,2)
--);
--
--CREATE TABLE c_reviews (
--    review_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
--    coffeeshop_id NUMBER REFERENCES c_coffeeshops(coffeeshop_id) ON DELETE CASCADE,
--    rating NUMBER(3,2) CHECK (rating BETWEEN 0 AND 5),
--    title VARCHAR2(255),
--    content CLOB,
--    reviewtype VARCHAR2(50)
--);
--
---- isflagwolt
--CREATE TABLE c_transactions (
--    transaction_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
--    transaction_date DATE NOT NULL,
--    transaction_time TIMESTAMP NOT NULL,
--    transaction_qty NUMBER NOT NULL CHECK (transaction_qty > 0),
--    branch_id NUMBER REFERENCES c_branches(branch_id) ON DELETE CASCADE,
--    product_id NUMBER REFERENCES c_products(product_id) ON DELETE CASCADE,
--    isflagwolt VARCHAR2(3) CHECK (isflagwolt IN ('YES', 'NO'))
--);
--
--
--
------------------------------------------------ 
---- ID sutunu elave olundu
--ALTER TABLE coffeeshop_sales
--ADD coffeeshop_id NUMBER GENERATED BY DEFAULT AS IDENTITY;
--
---- Location_count sutunu elave olundu
--ALTER TABLE coffeeshop_sales 
--ADD location_count NUMBER;
--
--UPDATE coffeeshop_sales 
--SET location_count = 
--    CASE 
--        WHEN branch_locations IS NULL THEN 0
--        ELSE LENGTH(branch_locations) - LENGTH(REPLACE(branch_locations, ',', '')) + 1
--    END;
--
--
--
--
--
--
--SELECT * FROM coffeeshop_sales;
--
--SELECT * FROM c_coffeeshops;
--SELECT * FROM c_coffeeshop_performance_sales;
--SELECT * FROM c_coffeeshop_campaigns;
--SELECT * FROM c_coffeeshop_features;
--SELECT * FROM c_products;
--SELECT * FROM c_product_prices;
--
--
--
--
--
--
--
--commit;
--
--
--DROP TABLE c_coffeeshops;
--DROP TABLE c_coffeeshop_performance_sales;
--DROP TABLE c_coffeeshop_campaigns;
--DROP TABLE c_coffeeshop_features;
--DROP TABLE c_products;
--DROP TABLE c_product_prices;
--DROP TABLE coffeeshop_sales;
--
--
--
--
--UPDATE c_product_prices
--SET price = 7
--WHERE price IS NULL;
--
--
----SELECT coffeeshop_name, 
----       TRIM(REGEXP_SUBSTR(solo_vs_group_visits, '[^,]+', 1, LEVEL)) AS visit_type
----FROM coffeeshop_sales
----CONNECT BY LEVEL <= REGEXP_COUNT(solo_vs_group_visits, ',') + 1
----AND PRIOR coffeeshop_name = coffeeshop_name
----AND PRIOR DBMS_RANDOM.VALUE IS NOT NULL;
--















------------------------------------------------------------------------
ALTER TABLE coffeeshop_sales
ADD locations_count NUMBER;

UPDATE coffeeshop_sales
SET locations_count = 
    CASE
        WHEN branch_locations IS NULL THEN 1
        ELSE LENGTH(branch_locations) - LENGTH(REPLACE(branch_locations, ',', '')) + 2
    END;
    


ALTER TABLE coffeeshop_sales
ADD coffeeshop_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1);


-- TEST -- distinct ile 41 setir qaytarir (dogrudur)
SELECT DISTINCT coffeeshop_name FROM coffeeshop_sales;
--

-- 1. c_coffeeshop
CREATE TABLE c_coffeeshops (
    coffeeshop_id NUMBER PRIMARY KEY,
    coffeeshop_name VARCHAR2(255),
    branch_locations VARCHAR2(255),
    has_other_branches VARCHAR2(20),
    most_popular_branch VARCHAR2(255),
    has_loyalty_card VARCHAR2(20)
);


INSERT INTO c_coffeeshops (
    coffeeshop_id,
    coffeeshop_name,
    branch_locations,
    has_other_branches,
    most_popular_branch,
    has_loyalty_card
)
SELECT
    coffeeshop_id,
    coffeeshop_name,
    branch_locations,
    has_other_branches,
    most_popular_branch,
    has_loyalty_card
FROM (
    SELECT 
        coffeeshop_id,
        coffeeshop_name,
        branch_locations,
        has_other_branches,
        most_popular_branch,
        has_loyalty_card,
        ROW_NUMBER() OVER (PARTITION BY coffeeshop_name ORDER BY ROWNUM) AS rn
    FROM coffeeshop_sales
)
WHERE rn = 1;


-- 
UPDATE c_coffeeshops
SET branch_locations = 'Filial yoxdur'
WHERE branch_locations IS NULL;

-- 
UPDATE c_coffeeshops
SET most_popular_branch = 'Filial yoxdur'
WHERE most_popular_branch IS NULL;
--

SELECT * FROM c_coffeeshops;


-- 2. c_branches
CREATE TABLE c_branches (
    branch_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    coffeeshop_id NUMBER, 
    branch VARCHAR2(255),
    seating_capacity NUMBER,
    has_dietary_options VARCHAR2(20),
    phone VARCHAR2(20),
    CONSTRAINT fk_coffeeshop FOREIGN KEY (coffeeshop_id) REFERENCES c_coffeeshops (coffeeshop_id) ON DELETE CASCADE
);


INSERT INTO c_branches (coffeeshop_id, branch, seating_capacity, has_dietary_options, phone)
SELECT 
    coffeeshop_id, 
    branch AS branch, 
    seating_capacity, 
    has_dietary_options AS has_dietary_options, 
    phone
FROM coffeeshop_sales;



UPDATE coffeeshop_sales
SET coffeeshop_id = (
    SELECT coffeeshop_id
    FROM c_coffeeshops
    WHERE c_coffeeshops.coffeeshop_name = coffeeshop_sales.coffeeshop_name
)
WHERE EXISTS (
    SELECT 1
    FROM c_coffeeshops
    WHERE c_coffeeshops.coffeeshop_name = coffeeshop_sales.coffeeshop_name
);


-- 3. c_branch_performance_sales
CREATE TABLE c_branch_performance_sales (
    branch_performance_sales_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    branch_id NUMBER REFERENCES c_branches(branch_id) ON DELETE CASCADE,
    
    peak_hours VARCHAR2(255),
    busiest_days VARCHAR2(255),
    peak_season VARCHAR2(255),
    best_weather_for_visits VARCHAR2(255),
    best_selling_product VARCHAR2(255),
    least_selling_product VARCHAR2(255),
    avg_time_spent VARCHAR2(50),
    dominant_age_group VARCHAR2(50),
    new_vs_loyal_customers VARCHAR2(50),
    visit_purpose VARCHAR2(255),
    solo_vs_group_visits VARCHAR2(50),
    customer_reaction_to_discounts VARCHAR2(50),
    holiday_customer_increase VARCHAR2(50),
    rating NUMBER(3,2) CHECK (rating BETWEEN 0 AND 5),
    review_count NUMBER DEFAULT 0,
    excellent_reviews NUMBER DEFAULT 0,
    good_reviews NUMBER DEFAULT 0,
    average_reviews NUMBER DEFAULT 0,
    poor_reviews NUMBER DEFAULT 0,
    terrible_reviews NUMBER DEFAULT 0,

    preferred_payment_method VARCHAR2(255),
    avg_order_price VARCHAR2(30),
    wolt_vs_inhouse_orders VARCHAR2(255),
    most_preferred_size VARCHAR2(50)
);


INSERT INTO c_branch_performance_sales (
    branch_id, 
    peak_hours, 
    busiest_days, 
    peak_season, 
    best_weather_for_visits, 
    best_selling_product, 
    least_selling_product, 
    avg_time_spent, 
    dominant_age_group, 
    new_vs_loyal_customers, 
    visit_purpose, 
    solo_vs_group_visits, 
    customer_reaction_to_discounts, 
    holiday_customer_increase, 
    rating, 
    review_count, 
    excellent_reviews, 
    good_reviews, 
    average_reviews, 
    poor_reviews, 
    terrible_reviews, 
    preferred_payment_method, 
    avg_order_price, 
    wolt_vs_inhouse_orders, 
    most_preferred_size
)
SELECT 
    coffeeshop_id, 
    peak_hours, 
    busiest_days, 
    peak_season, 
    best_weather_for_visits, 
    best_selling_product, 
    least_selling_product, 
    avg_time_spent, 
    dominant_age_group, 
    new_vs_loyal_customers, 
    visit_purpose, 
    solo_vs_group_visits, 
    customer_reaction_to_discounts, 
    holiday_customer_increase, 
    rating, 
    review_count, 
    excellent_reviews, 
    good_reviews, 
    average_reviews, 
    poor_reviews, 
    terrible_reviews, 
    preferred_payment_method, 
    avg_order_price, 
    wolt_vs_inhouse_orders, 
    most_preferred_size
FROM coffeeshop_sales;


-- 4. c_branch_features
CREATE TABLE c_branch_features (
    branch_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    accepts_credit_cards NUMBER(1) CHECK (accepts_credit_cards IN (0,1)),
    seating NUMBER(1) CHECK (seating IN (0,1)),
    free_wifi NUMBER(1) CHECK (free_wifi IN (0,1)),
    visa NUMBER(1) CHECK (visa IN (0,1)),
    mastercard NUMBER(1) CHECK (mastercard IN (0,1)),
    delivery NUMBER(1) CHECK (delivery IN (0,1)),
    takeout NUMBER(1) CHECK (takeout IN (0,1)),
    reservations NUMBER(1) CHECK (reservations IN (0,1)),
    street_parking NUMBER(1) CHECK (street_parking IN (0,1)),
    parking_available NUMBER(1) CHECK (parking_available IN (0,1)),
    family_style NUMBER(1) CHECK (family_style IN (0,1)),
    digital_payments NUMBER(1) CHECK (digital_payments IN (0,1)),
    table_service NUMBER(1) CHECK (table_service IN (0,1)),
    serves_alcohol NUMBER(1) CHECK (serves_alcohol IN (0,1)),
    outdoor_seating NUMBER(1) CHECK (outdoor_seating IN (0,1)),
    dog_friendly NUMBER(1) CHECK (dog_friendly IN (0,1)),
    full_bar NUMBER(1) CHECK (full_bar IN (0,1)),
    wheelchair_accessible NUMBER(1) CHECK (wheelchair_accessible IN (0,1)),
    non_smoking_restaurants NUMBER(1) CHECK (non_smoking_restaurants IN (0,1)),
    cash_only NUMBER(1) CHECK (cash_only IN (0,1)),
    discover NUMBER(1) CHECK (discover IN (0,1)),
    free_off_street_parking NUMBER(1) CHECK (free_off_street_parking IN (0,1)),
    drive_thru NUMBER(1) CHECK (drive_thru IN (0,1)),
    television NUMBER(1) CHECK (television IN (0,1)),
    live_music NUMBER(1) CHECK (live_music IN (0,1)),
    highchairs_available NUMBER(1) CHECK (highchairs_available IN (0,1)),
    gift_cards_available NUMBER(1) CHECK (gift_cards_available IN (0,1)),
    private_dining NUMBER(1) CHECK (private_dining IN (0,1)),
    playgrounds NUMBER(1) CHECK (playgrounds IN (0,1)),
    buffet NUMBER(1) CHECK (buffet IN (0,1)),
    sports_bars NUMBER(1) CHECK (sports_bars IN (0,1)),
    jazz_bar NUMBER(1) CHECK (jazz_bar IN (0,1)),
    validated_parking NUMBER(1) CHECK (validated_parking IN (0,1)),
    valet_parking NUMBER(1) CHECK (valet_parking IN (0,1)),
    waterfront NUMBER(1) CHECK (waterfront IN (0,1)),
    beach NUMBER(1) CHECK (beach IN (0,1))
);


INSERT INTO c_branch_features (
    accepts_credit_cards,
    seating,
    free_wifi,
    visa,
    mastercard,
    delivery,
    takeout,
    reservations,
    street_parking,
    parking_available,
    family_style,
    digital_payments,
    table_service,
    serves_alcohol,
    outdoor_seating,
    dog_friendly,
    full_bar,
    wheelchair_accessible,
    non_smoking_restaurants,
    cash_only,
    discover,
    free_off_street_parking,
    drive_thru,
    television,
    live_music,
    highchairs_available,
    gift_cards_available,
    private_dining,
    playgrounds,
    buffet,
    sports_bars,
    jazz_bar,
    validated_parking,
    valet_parking,
    waterfront,
    beach
)
SELECT 
    accepts_credit_cards,
    seating,
    free_wifi,
    visa,
    mastercard,
    delivery,
    takeout,
    reservations,
    street_parking,
    parking_available,
    family_style,
    digital_payments,
    table_service,
    serves_alcohol,
    outdoor_seating,
    dog_friendly,
    full_bar,
    wheelchair_accessible,
    non_smoking_restaurants,
    cash_only,
    discover,
    free_off_street_parking,
    drive_thru,
    television,
    live_music,
    highchairs_available,
    gift_cards_available,
    private_dining,
    playgrounds,
    buffet,
    sports_bars,
    jazz_bar,
    validated_parking,
    valet_parking,
    waterfront,
    beach
FROM coffeeshop_sales;


-- 5. 
-- c_coffeeshop_campaigns table
CREATE TABLE c_coffeeshop_campaigns (
    coffeeshop_campaign_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    branch_id NUMBER REFERENCES x_branches(branch_id) ON DELETE CASCADE,
    recent_campaign_types VARCHAR2(255),
    products_in_campaigns VARCHAR2(255),
    sales_difference_after_campaigns VARCHAR2(255)
);

INSERT INTO c_coffeeshop_campaigns (branch_id, recent_campaign_types, products_in_campaigns, sales_difference_after_campaigns)
SELECT 
    branch_id, 
    recent_campaign_types, 
    products_in_campaigns, 
    sales_difference_after_campaigns
FROM coffeeshop_sales;


SELECT * FROM c_coffeeshop_campaigns;




-- 6. c_products table
CREATE TABLE c_products (
    product_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    product_name VARCHAR2(255) UNIQUE NOT NULL
);

INSERT INTO c_products (product_name) VALUES ('Americano');
INSERT INTO c_products (product_name) VALUES ('Latte');
INSERT INTO c_products (product_name) VALUES ('Espresso');
INSERT INTO c_products (product_name) VALUES ('Cappuccino');
INSERT INTO c_products (product_name) VALUES ('RafCoffee');
INSERT INTO c_products (product_name) VALUES ('WhiteMocha');
INSERT INTO c_products (product_name) VALUES ('BlackMocha');
INSERT INTO c_products (product_name) VALUES ('HotChocolate');
INSERT INTO c_products (product_name) VALUES ('Tea');




-- 7. c_product_prices table
CREATE TABLE c_product_prices (
    price_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    coffeeshop_id NUMBER REFERENCES c_coffeeshops(coffeeshop_id) ON DELETE CASCADE,
    product_id NUMBER REFERENCES c_products(product_id) ON DELETE CASCADE,
    price NUMBER(5,2)
);

INSERT INTO c_product_prices (coffeeshop_id, product_id, price)
SELECT cs.coffeeshop_id,
       p.product_id,
       CASE 
           WHEN p.product_name = 'Americano' THEN cs.americano_price
           WHEN p.product_name = 'Latte' THEN cs.latte_price
           WHEN p.product_name = 'Espresso' THEN cs.espresso_price
           WHEN p.product_name = 'Cappuccino' THEN cs.cappuccino_price
           WHEN p.product_name = 'RafCoffee' THEN cs.rafcoffee_price
           WHEN p.product_name = 'WhiteMocha' THEN cs.whitemocha_price
           WHEN p.product_name = 'BlackMocha' THEN cs.blackmocha_price
           WHEN p.product_name = 'HotChocolate' THEN cs.hotchocolate_price
           WHEN p.product_name = 'Tea' THEN cs.tea_price
       END AS price
FROM coffeeshop_sales cs
JOIN c_products p ON p.product_name IN ('Americano', 'Latte', 'Espresso', 'Cappuccino', 'RafCoffee', 'WhiteMocha', 'BlackMocha', 'HotChocolate', 'Tea');

select * from c_product_prices; -- 747 rows







-------------------------------
SELECT * FROM coffeeshop_sales;

SELECT * FROM c_coffeeshops;
SELECT * FROM c_branches;
SELECT * FROM c_branch_performance_sales;
SELECT * FROM c_branch_features;
SELECT * FROM c_products;
SELECT * FROM c_product_prices;













commit;




-------------------------------
DROP TABLE coffeeshop_sales;
DROP TABLE c_coffeeshops;
DROP TABLE c_branches;
DROP TABLE c_branch_performance_sales;
DROP TABLE c_branch_features;
-------------------------------
