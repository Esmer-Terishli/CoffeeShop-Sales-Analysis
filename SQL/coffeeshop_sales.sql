-- 1. coffeeshops
CREATE TABLE coffeeshops (
    shop_id NUMBER PRIMARY KEY,
    shop_name VARCHAR2(255) NOT NULL,
    has_other_branches CHAR(1) CHECK (has_other_branches IN ('Y', 'N'))
);

-- 2. branches 
CREATE TABLE branches (
    branch_id NUMBER PRIMARY KEY,
    shop_id NUMBER,
    location VARCHAR2(255) NOT NULL,
    customer_count NUMBER DEFAULT 0, -- Müştəri sayı (ən məşhur filialı müəyyən etmək üçün)
    total_seat_capacity NUMBER,
    FOREIGN KEY (shop_id) REFERENCES coffeeshops(shop_id)
);

-- 3. customer_behavior 
CREATE TABLE customer_behavior (
    behavior_id NUMBER PRIMARY KEY,
    shop_id NUMBER,
    peak_hours VARCHAR2(255),
    busiest_days VARCHAR2(255),
    busiest_season VARCHAR2(50),
    weather_effect_on_customers VARCHAR2(255),
    customer_age_group VARCHAR2(50),
    customer_type VARCHAR2(50) CHECK (customer_type IN ('New', 'Regular')),
    FOREIGN KEY (shop_id) REFERENCES coffeeshops(shop_id)
);

-- 4. product_sales 
CREATE TABLE product_sales (
    sales_id NUMBER PRIMARY KEY,
    shop_id NUMBER,
    best_selling_product VARCHAR2(255),
    least_selling_product VARCHAR2(255),
    FOREIGN KEY (shop_id) REFERENCES coffeeshops(shop_id)
);

-- 5. customer_stay 
CREATE TABLE customer_stay (
    stay_id NUMBER PRIMARY KEY,
    shop_id NUMBER,
    average_stay_duration NUMBER, -- Dəqiqə ilə
    visit_purpose VARCHAR2(255),
    visit_group_or_single VARCHAR2(10) CHECK (visit_group_or_single IN ('Solo', 'Group')),
    customer_payment_method VARCHAR2(10) CHECK (customer_payment_method IN ('Cash', 'Card', 'Online')),
    FOREIGN KEY (shop_id) REFERENCES coffeeshops(shop_id)
);

-- 6. promotions 
CREATE TABLE promotions (
    campaign_id NUMBER PRIMARY KEY,
    shop_id NUMBER,
    campaign_type VARCHAR2(255),
    campaign_products VARCHAR2(255),
    sales_difference_after_campaign NUMBER(5,2),
    FOREIGN KEY (shop_id) REFERENCES coffeeshops(shop_id)
);

-- 7. CREATE TABLE promotion_feedback 
CREATE TABLE promotion_feedback (
    feedback_id NUMBER PRIMARY KEY,
    campaign_id NUMBER,
    customer_reaction VARCHAR2(255),
    FOREIGN KEY (campaign_id) REFERENCES promotions(campaign_id)
);


-- 8. order_behavior 
CREATE TABLE order_behavior (
    order_id NUMBER PRIMARY KEY,
    shop_id NUMBER,
    average_order_price NUMBER(10,2),
    order_method VARCHAR2(10) CHECK (order_method IN ('Wolt', 'In-store')),
    preferred_sizes VARCHAR2(10) CHECK (preferred_sizes IN ('Small', 'Medium', 'Large')),
    customer_increase_special_days NUMBER(5,2),
    FOREIGN KEY (shop_id) REFERENCES coffeeshops(shop_id)
);

-- 9. loyalty card
CREATE TABLE loyalty (
    loyalty_id NUMBER PRIMARY KEY,
    shop_id NUMBER,
    loyalty_card_available CHAR(1) CHECK (loyalty_card_available IN ('Y', 'N')),
    FOREIGN KEY (shop_id) REFERENCES coffeeshops(shop_id)
);

-- 10. seasonal_orders 
CREATE TABLE seasonal_orders (
    seasonal_id NUMBER PRIMARY KEY,
    shop_id NUMBER,
    winter_weekday_orders NUMBER,
    winter_weekend_orders NUMBER,
    summer_weekday_orders NUMBER,
    summer_weekend_orders NUMBER,
    FOREIGN KEY (shop_id) REFERENCES coffeeshops(shop_id)
);

-- 11. menu_prices 
CREATE TABLE menu_prices (
    price_id NUMBER PRIMARY KEY,
    shop_id NUMBER,
    americano_price NUMBER(10,2),
    latte_price NUMBER(10,2),
    espresso_price NUMBER(10,2),
    cappuccino_price NUMBER(10,2),
    raf_coffee_price NUMBER(10,2),
    white_mocha_price NUMBER(10,2),
    black_mocha_price NUMBER(10,2),
    hot_chocolate_price NUMBER(10,2),
    tea_price NUMBER(10,2),
    FOREIGN KEY (shop_id) REFERENCES coffeeshops(shop_id)
);






----------------------------------------------------------------------------

-- 1. Main CoffeeShop Table
CREATE TABLE CoffeeShop (
    shop_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    coffeeshop_name VARCHAR2(255) NOT NULL,
    has_other_branches NUMBER(1) CHECK (has_other_branches IN (0,1)),
    most_popular_branch VARCHAR2(255),
    seating_capacity NUMBER(5),
    holiday_customer_increase NUMBER(5),
    has_loyalty_card NUMBER(1) CHECK (has_loyalty_card IN (0,1)),
    has_dietary_options NUMBER(1) CHECK (has_dietary_options IN (0,1))
);

-- 2. CoffeeShop Branches
CREATE TABLE CoffeeShopBranch (
    branch_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    shop_id NUMBER REFERENCES CoffeeShop(shop_id),
    branch VARCHAR2(255),
    branch_locations VARCHAR2(500)
);

-- 3. Customer Behavior
CREATE TABLE CustomerBehavior (
    behavior_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    shop_id NUMBER REFERENCES CoffeeShop(shop_id),
    peak_hours VARCHAR2(255),
    busiest_days VARCHAR2(255),
    peak_season VARCHAR2(255),
    best_weather_for_visits VARCHAR2(255),
    avg_time_spent NUMBER(5,2),
    dominant_age_group VARCHAR2(100),
    new_vs_loyal_customers VARCHAR2(100),
    visit_purpose VARCHAR2(500),
    solo_vs_group_visits VARCHAR2(100)
);

-- 4. Campaigns & Discounts
CREATE TABLE Campaigns (
    campaign_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    shop_id NUMBER REFERENCES CoffeeShop(shop_id),
    customer_reaction_to_discounts VARCHAR2(500),
    recent_campaign_types VARCHAR2(500),
    products_in_campaigns VARCHAR2(500),
    sales_difference_after_campaigns NUMBER(10,2)
);

-- 5. Sales & Orders
CREATE TABLE SalesOrders (
    sales_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    shop_id NUMBER REFERENCES CoffeeShop(shop_id),
    preferred_payment_method VARCHAR2(100),
    avg_order_price NUMBER(10,2),
    wolt_vs_inhouse_orders VARCHAR2(100),
    most_preferred_size VARCHAR2(50),
    winter_weekday_orders NUMBER(5),
    winter_weekend_orders NUMBER(5),
    summer_weekday_orders NUMBER(5),
    summer_weekend_orders NUMBER(5)
);

-- 6. Product Prices
CREATE TABLE ProductPrices (
    price_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    shop_id NUMBER REFERENCES CoffeeShop(shop_id),
    best_selling_product VARCHAR2(255),
    least_selling_product VARCHAR2(255),
    americano_price NUMBER(5,2),
    latte_price NUMBER(5,2),
    espresso_price NUMBER(5,2),
    cappuccino_price NUMBER(5,2),
    rafcoffee_price NUMBER(5,2),
    whitemocha_price NUMBER(5,2),
    blackmocha_price NUMBER(5,2),
    hotchocolate_price NUMBER(5,2),
    tea_price NUMBER(5,2)
);

-- 7. TripAdvisor Info
CREATE TABLE TripAdvisor (
    trip_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    shop_id NUMBER REFERENCES CoffeeShop(shop_id),
    tripadvisor_url VARCHAR2(500),
    address VARCHAR2(500),
    phone VARCHAR2(50),
    rating NUMBER(3,2),
    review_count NUMBER(6),
    excellent_reviews NUMBER(6),
    good_reviews NUMBER(6),
    average_reviews NUMBER(6),
    poor_reviews NUMBER(6),
    terrible_reviews NUMBER(6)
);

-- 8. TripAdvisor Features
CREATE TABLE TripAdvisorFeatures (
    feature_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    trip_id NUMBER REFERENCES TripAdvisor(trip_id),
    accepts_credit_cards NUMBER(1) CHECK (accepts_credit_cards IN (0,1)),
    seating NUMBER(1) CHECK (seating IN (0,1)),
    free_wifi NUMBER(1) CHECK (free_wifi IN (0,1)),
    visa NUMBER(1) CHECK (visa IN (0,1)),
    mastercard NUMBER(1) CHECK (mastercard IN (0,1)),
    delivery NUMBER(1) CHECK (delivery IN (0,1)),
    takeout NUMBER(1) CHECK (takeout IN (0,1)),
    reservations NUMBER(1) CHECK (reservations IN (0,1)),
    street_parking NUMBER(1) CHECK (street_parking IN (0,1)),
    non_smoking NUMBER(1) CHECK (non_smoking IN (0,1)),
    parking_available NUMBER(1) CHECK (parking_available IN (0,1)),
    family_style NUMBER(1) CHECK (family_style IN (0,1)),
    digital_payments NUMBER(1) CHECK (digital_payments IN (0,1)),
    table_service NUMBER(1) CHECK (table_service IN (0,1)),
    wine_and_beer NUMBER(1) CHECK (wine_and_beer IN (0,1)),
    serves_alcohol NUMBER(1) CHECK (serves_alcohol IN (0,1)),
    outdoor_seating NUMBER(1) CHECK (outdoor_seating IN (0,1)),
    american_express NUMBER(1) CHECK (american_express IN (0,1)),
    dog_friendly NUMBER(1) CHECK (dog_friendly IN (0,1)),
    full_bar NUMBER(1) CHECK (full_bar IN (0,1)),
    wheelchair_accessible NUMBER(1) CHECK (wheelchair_accessible IN (0,1)),
    cash_only NUMBER(1) CHECK (cash_only IN (0,1)),
    discover NUMBER(1) CHECK (discover IN (0,1)),
    free_off_street_parking NUMBER(1) CHECK (free_off_street_parking IN (0,1)),
    drive_thru NUMBER(1) CHECK (drive_thru IN (0,1)),
    television NUMBER(1) CHECK (television IN (0,1)),
    live_music NUMBER(1) CHECK (live_music IN (0,1)),
    highchairs_available NUMBER(1) CHECK (highchairs_available IN (0,1)),
    gift_cards_available NUMBER(1) CHECK (gift_cards_available IN (0,1)),
    private_dining NUMBER(1) CHECK (private_dining IN (0,1)),
    playgrounds NUMBER(1) CHECK (playgrounds IN (0,1)),
    buffet NUMBER(1) CHECK (buffet IN (0,1)),
    sports_bars NUMBER(1) CHECK (sports_bars IN (0,1)),
    jazz_bar NUMBER(1) CHECK (jazz_bar IN (0,1)),
    validated_parking NUMBER(1) CHECK (validated_parking IN (0,1)),
    valet_parking NUMBER(1) CHECK (valet_parking IN (0,1)),
    waterfront NUMBER(1) CHECK (waterfront IN (0,1)),
    beach NUMBER(1) CHECK (beach IN (0,1))
);

-- 9. Transaction 
CREATE TABLE Transaction (
    transaction_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    transaction_date DATE,
    transaction_time DATE,
    transaction_qty NUMBER(5),
    store_id NUMBER REFERENCES CoffeeShop(shop_id),
    store_location VARCHAR2(255),
    product_id NUMBER,
    unit_price NUMBER(5,2),
    FOREIGN KEY (store_id) REFERENCES CoffeeShop(shop_id), 
    FOREIGN KEY (store_location) REFERENCES CoffeeShopBranch(branch_locations), 
    FOREIGN KEY (product_id) REFERENCES ProductPrices(price_id)
);








---------------------------------------------------------------------------

CREATE TABLE coffeeshops (
    coffeeshop_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    coffeeshop_name VARCHAR2(255),
    has_other_branches NUMBER(1) CHECK (has_other_branches IN (0,1)),
    most_popular_branch VARCHAR2(255),
    has_loyalty_card NUMBER(1) CHECK (has_loyalty_card IN (0,1))
);

CREATE TABLE branches (
    branch_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    coffeeshop_id NUMBER REFERENCES coffeeshops(coffeeshop_id) ON DELETE CASCADE,
    branch_name VARCHAR2(255),
    branch_locations VARCHAR2(255),
    seating_capacity NUMBER,
    has_dietary_options NUMBER(1) CHECK (has_dietary_options IN (0,1)),
    address VARCHAR2(255),
    phone VARCHAR2(20),
    url CLOB
);

CREATE TABLE branch_performance_sales (
    branch_performance_sales_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    branch_id NUMBER REFERENCES branches(branch_id) ON DELETE CASCADE,
    
    peak_hours VARCHAR2(255),
    busiest_days VARCHAR2(255),
    peak_season VARCHAR2(255),
    best_weather_for_visits VARCHAR2(255),
    best_selling_product VARCHAR2(255),
    least_selling_product VARCHAR2(255),
    avg_time_spent VARCHAR2(50),
    dominant_age_group VARCHAR2(50),
    new_vs_loyal_customers VARCHAR2(50),
    visit_purpose VARCHAR2(255),
    solo_vs_group_visits VARCHAR2(50),
    customer_reaction_to_discounts VARCHAR2(50),
    holiday_customer_increase VARCHAR2(50),
    rating NUMBER(3,2) CHECK (rating BETWEEN 0 AND 5),
    review_count NUMBER DEFAULT 0,
    excellent_reviews NUMBER DEFAULT 0,
    good_reviews NUMBER DEFAULT 0,
    average_reviews NUMBER DEFAULT 0,
    poor_reviews NUMBER DEFAULT 0,
    terrible_reviews NUMBER DEFAULT 0,

    preferred_payment_method VARCHAR2(255),
    avg_order_price NUMBER(10,2),
    wolt_vs_inhouse_orders VARCHAR2(255),
    most_preferred_size VARCHAR2(50)
);


CREATE TABLE branch_campaigns (
    branch_campaign_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    branch_id NUMBER REFERENCES branches(branch_id) ON DELETE CASCADE,
    recent_campaign_types VARCHAR2(255),
    products_in_campaigns VARCHAR2(255),
    sales_difference_after_campaigns VARCHAR2(255)
);

CREATE TABLE products (
    product_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    product_name VARCHAR2(255) UNIQUE NOT NULL
);

CREATE TABLE product_prices (
    price_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    branch_id NUMBER REFERENCES branches(branch_id) ON DELETE CASCADE,
    product_id NUMBER REFERENCES products(product_id) ON DELETE CASCADE,
    price NUMBER(5,2)
);

CREATE TABLE branch_features (
    branch_id NUMBER PRIMARY KEY REFERENCES branches(branch_id) ON DELETE CASCADE,
    accepts_credit_cards NUMBER(1) CHECK (accepts_credit_cards IN (0,1)),
    seating NUMBER(1) CHECK (seating IN (0,1)),
    free_wifi NUMBER(1) CHECK (free_wifi IN (0,1)),
    visa NUMBER(1) CHECK (visa IN (0,1)),
    mastercard NUMBER(1) CHECK (mastercard IN (0,1)),
    delivery NUMBER(1) CHECK (delivery IN (0,1)),
    takeout NUMBER(1) CHECK (takeout IN (0,1)),
    reservations NUMBER(1) CHECK (reservations IN (0,1)),
    street_parking NUMBER(1) CHECK (street_parking IN (0,1)),
    parking_available NUMBER(1) CHECK (parking_available IN (0,1)),
    family_style NUMBER(1) CHECK (family_style IN (0,1)),
    digital_payments NUMBER(1) CHECK (digital_payments IN (0,1)),
    table_service NUMBER(1) CHECK (table_service IN (0,1)),
    serves_alcohol NUMBER(1) CHECK (serves_alcohol IN (0,1)),
    outdoor_seating NUMBER(1) CHECK (outdoor_seating IN (0,1)),
    dog_friendly NUMBER(1) CHECK (dog_friendly IN (0,1)),
    full_bar NUMBER(1) CHECK (full_bar IN (0,1)),
    wheelchair_accessible NUMBER(1) CHECK (wheelchair_accessible IN (0,1))
);

CREATE TABLE wolt_prices (
    wolt_price_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    coffeeshop_id NUMBER REFERENCES coffeeshops(coffeeshop_id) ON DELETE CASCADE,
    product_id NUMBER REFERENCES products(product_id) ON DELETE CASCADE,
    price NUMBER(5,2)
);

CREATE TABLE reviews (
    review_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    coffeeshop_id NUMBER REFERENCES coffeeshops(coffeeshop_id) ON DELETE CASCADE,
    rating NUMBER(3,2) CHECK (rating BETWEEN 0 AND 5),
    title VARCHAR2(255),
    content CLOB,
    reviewtype VARCHAR2(50)
);

CREATE TABLE transactions (
    transaction_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    transaction_date DATE NOT NULL,
    transaction_time TIMESTAMP NOT NULL,
    transaction_qty NUMBER NOT NULL CHECK (transaction_qty > 0),
    store_id NUMBER REFERENCES branches(branch_id) ON DELETE CASCADE,
    product_id NUMBER REFERENCES products(product_id) ON DELETE CASCADE,
    price NUMBER(10,2) NOT NULL CHECK (price >= 0)
);




